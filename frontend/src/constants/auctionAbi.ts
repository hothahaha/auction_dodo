export const auctionAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "auctions",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "startTime", type: "uint256", internalType: "uint256" },
      { name: "endTime", type: "uint256", internalType: "uint256" },
      { name: "initiator", type: "address", internalType: "address" },
      { name: "highestBidder", type: "address", internalType: "address" },
      { name: "highestBid", type: "uint256", internalType: "uint256" },
      { name: "beneficiary", type: "address", internalType: "address" },
      { name: "ended", type: "bool", internalType: "bool" },
      { name: "ipfsHash", type: "string", internalType: "string" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bid",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "checkUpkeep",
    inputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    outputs: [
      { name: "upkeepNeeded", type: "bool", internalType: "bool" },
      { name: "performData", type: "bytes", internalType: "bytes" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAuction",
    inputs: [
      { name: "_name", type: "string", internalType: "string" },
      { name: "_duration", type: "uint256", internalType: "uint256" },
      { name: "_beneficiary", type: "address", internalType: "address" },
      { name: "_ipfsHash", type: "string", internalType: "string" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "endAuction",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllBids",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct PublicAuction.Bid[]",
        components: [
          { name: "bidder", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "bidTime", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionCountByName",
    inputs: [{ name: "_name", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionIPFSHash",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionIdsByName",
    inputs: [{ name: "_name", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionName",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuctionsByName",
    inputs: [
      { name: "_name", type: "string", internalType: "string" },
      { name: "_offset", type: "uint256", internalType: "uint256" },
      { name: "_limit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct PublicAuction.AuctionInfo[]",
        components: [
          { name: "auctionId", type: "uint256", internalType: "uint256" },
          { name: "name", type: "string", internalType: "string" },
          { name: "startTime", type: "uint256", internalType: "uint256" },
          { name: "endTime", type: "uint256", internalType: "uint256" },
          { name: "initiator", type: "address", internalType: "address" },
          { name: "highestBidder", type: "address", internalType: "address" },
          { name: "highestBid", type: "uint256", internalType: "uint256" },
          { name: "beneficiary", type: "address", internalType: "address" },
          { name: "ended", type: "bool", internalType: "bool" },
          { name: "ipfsHash", type: "string", internalType: "string" },
          {
            name: "bids",
            type: "tuple[]",
            internalType: "struct PublicAuction.Bid[]",
            components: [
              { name: "bidder", type: "address", internalType: "address" },
              { name: "amount", type: "uint256", internalType: "uint256" },
              { name: "bidTime", type: "uint256", internalType: "uint256" },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBidsForAddress",
    inputs: [
      { name: "_auctionId", type: "uint256", internalType: "uint256" },
      { name: "_bidder", type: "address", internalType: "address" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct PublicAuction.Bid[]",
        components: [
          { name: "bidder", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "bidTime", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nextAuctionId",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "performUpkeep",
    inputs: [{ name: "performData", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      { name: "newImplementation", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [{ name: "_auctionId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AuctionCreated",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      { name: "name", type: "string", indexed: false, internalType: "string" },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "startTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "endTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ipfsHash",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AuctionEnded",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "winner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BidPlaced",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newHighestBid",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WithdrawSuccessful",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      { name: "implementation", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "ERC1967NonPayable", inputs: [] },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "PublicAuction__AuctionAlreadyEnded", inputs: [] },
  { type: "error", name: "PublicAuction__AuctionEndAlreadyCalled", inputs: [] },
  { type: "error", name: "PublicAuction__AuctionNotFound", inputs: [] },
  { type: "error", name: "PublicAuction__AuctionNotYetEnded", inputs: [] },
  {
    type: "error",
    name: "PublicAuction__AuctionNotYetEndedOrInBuffer",
    inputs: [],
  },
  {
    type: "error",
    name: "PublicAuction__BeneficiaryCannotBeZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "PublicAuction__InsufficientContractBalance",
    inputs: [],
  },
  { type: "error", name: "PublicAuction__InvalidAuctionDuration", inputs: [] },
  { type: "error", name: "PublicAuction__InvalidAuctionName", inputs: [] },
  { type: "error", name: "PublicAuction__InvalidIPFSHash", inputs: [] },
  { type: "error", name: "PublicAuction__TransferFailed", inputs: [] },
  {
    type: "error",
    name: "PublicAuction__UpkeepNotNeeded",
    inputs: [
      { name: "balance", type: "uint256", internalType: "uint256" },
      { name: "bidderLength", type: "uint256", internalType: "uint256" },
      { name: "auctionState", type: "bool", internalType: "bool" },
    ],
  },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  { type: "error", name: "UUPSUnauthorizedCallContext", inputs: [] },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
  },
];
